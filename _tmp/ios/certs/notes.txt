
********************************************
CSR:
********************************************

(is all about the developer)

CSR is a message sent from an applicant to certificate authority in order to apply for the digital identity certificate. 

This uses Public Key Infrastructure which is policies to create, manage an distribute the digital certificate.

Keep private key on PC, send public key to Apple (along with email, address, etc)
Apple sends back a CSR (what format?)

Creating a CSR:
-create keychain
-add in details (email address)
-save to disk

While creating CSR, the public/private key pair is generated under the hood:
-the public key is attached to your CSR
-the private key is kept inside your local machine

Itâ€™s not a good idea to generating CSR from multiple macOS as they key pair generated on one mac cannot be present on other mac. 

Use one mac to generate CSR until we create the certificate in P12 format.

Public keys have passwords
Private keys dont


********************************************
PROVISIONING:
********************************************

(is all about the app)

Provisioning profile fields:
-Team ID (ABCD1234)
-Bundle ID (com.company_name.com)
-App ID (ABCD1234.com.company_name.com)
-Device ID (aka UDID, 40 characters long, numbers & letters, adf8251642629f4ca7ed6f27f7d9efc2535ffbaf)
-Entitlements



********************************************
ENTITLEMENTS:
********************************************

(all about things within the app)

Are specified in a .PLIST file



********************************************
CODE SIGN:
********************************************

Archive created in Xcode through xcodebuild command line tool is signed with development certificate at first.

When we specify the distribution method then archive is resigned with distribution code signing.
















